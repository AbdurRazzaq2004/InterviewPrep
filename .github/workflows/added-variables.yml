name: Multi-Job Docker Build and Push with Environment Variables
run-name: ${{ github.actor }} is learning environment variables with multiple jobs

# When to run this workflow
on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

# Global environment variables (available to all jobs)
env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: abdulrazzaq2004/docker-practice-app
  APP_VERSION: 1.0.${{ github.run_number }}

jobs:
  # JOB 1: GET THE CODE
  job1:
    # Name shown in GitHub UI
    name: Get Source Code
    # Run on Ubuntu machine
    runs-on: ubuntu-latest
    
    steps:
      # Download code from GitHub repository
      - name: Download code
        uses: actions/checkout@v4

      # Show environment variables (for learning)
      - name: Show variables
        run: |
          echo "Image name: ${{ env.IMAGE_NAME }}"
          echo "Version: ${{ env.APP_VERSION }}"

      # Save code for next job
      - name: Save code for build job
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  # JOB 2: BUILD DOCKER IMAGE
  job2:
    # Name shown in GitHub UI
    name: Build Docker Image
    # Run on Ubuntu machine
    runs-on: ubuntu-latest
    # Wait for checkout job to finish first
    needs: job1
    
    steps:
      # Get the code from previous job
      - name: Get source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      # Show what we're building
      - name: Show build info
        run: |
          echo "Building image: ${{ env.IMAGE_NAME }}"
          echo "Version: ${{ env.APP_VERSION }}"

      # Build Docker image (like running: docker build -t myimage .)
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}
          load: true

      # Save the image for next job
      - name: Save image for push job
        run: |
          docker save ${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }} > /tmp/my-image.tar
          
      - name: Upload image file
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/my-image.tar

  # JOB 3: PUSH DOCKER IMAGE
  job3:
    # Name shown in GitHub UI
    name: Push to Docker Hub
    # Run on Ubuntu machine
    runs-on: ubuntu-latest
    # Wait for build job to finish first
    needs: job2
    
    steps:
      # Get the built image from previous job
      - name: Get built image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      # Load the image into Docker
      - name: Load Docker image
        run: docker load --input /tmp/my-image.tar

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push image to Docker Hub (like running: docker push myimage)
      - name: Push to Docker Hub
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}

      # Show success message
      - name: Show success
        run: echo "âœ… Image pushed to Docker Hub!"